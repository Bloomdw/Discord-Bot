/**
 * win32-def
 * win32 definitions for node-ffi
 *
 * @version 9.3.0
 * @author waiting
 * @license MIT
 * @link https://waitingsong.github.io/node-win32-api
 */
const t="_WIN64_HOLDER_",n="_UNICODE_HOLDER_",i=new Set(["macroMap"]),e="x64"===process.arch,r=!0,N={singleton:!0,_UNICODE:!0,_WIN64:e},O=new Set(["bool","bool*","byte","byte*","char","uchar","char*","float","float*","int","int8","int16","int32","int64","int*","int8*","int16*","int32*","int64*","uint","uint8","uint16","uint32","uint64","uint*","uint8*","uint16*","uint32*","uint64*","int**","uint**","uint32**","uint64**","long","longlong","long*","longlong*","pointer","ushort","void","void*"]);var D=Object.freeze({__proto__:null,_WIN64_HOLDER:t,_UNICODE_HOLDER:n,windefSkipKeys:i,_WIN64:e,_UNICODE:!0,settingsDefault:N,windefSet:O});function o(t,n,i){const e=undefined,r=undefined,N=E(u(t),P(n,i));return s(N,O),N}function T(i,e){if("string"==typeof i)return i;if(!i)throw new Error("parse_param_placeholder(ps, settings) value of ps invalid");if(!Array.isArray(i)||3!==i.length)throw new Error("parse_param_placeholder(ps, settings) value of ps must Array and has THREE elements");const r=I(e);let N="";switch(i[0]){case t:N=L(i,r._WIN64);break;case n:N=R(i,r._UNICODE);break;default:throw new Error("the value of param placeholder invlaid:"+i[0])}return N}function L(t,n){if("string"==typeof t)return t;if(!t||3!==t.length)throw new Error("_WIN64 macro should be Array and has 3 items");return n?t[1]:t[2]}function R(t,n){if("string"==typeof t)return t;if(!t||3!==t.length)throw new Error("_UNICODE macro should be Array and has 3 items");return n?t[1]:t[2]}function P(t,n){const i=new Map;for(const[e,r]of t.entries())i.set(e,T(r,n));return i}function E(t,n){const i={},e=new Map;for(const i of Object.keys(t))if(!e.has(i)&&n.has(i)){const t=n.get(i);if(!t)throw new Error(`Value of macroSrc item "${i}" blank`);e.set(i,t)}for(const[i,r]of Object.entries(t))if(!e.has(i)){if("string"!=typeof r)throw new Error(`prepare_windef_ref() missing entry for k/v: ${i}/"N/A"`);if(O.has(r))e.set(i,r);else{const N=a(r,t,n);"string"==typeof N&&N?e.set(i,N):e.set(i,r)}}return e.forEach((t,n)=>{i[n]=t}),i}function u(t){const n={};for(const i of Object.keys(t)){if("string"!=typeof t[i])throw new Error(`typeof value of ${i} NOT string`);Object.defineProperty(n,i,{value:t[i],writable:!0,enumerable:!0,configurable:!0})}return n}function I(t){const n={...N};return"undefined"!=typeof t&&Object.keys(t).length&&Object.assign(n,t),n}function a(t,n,i){let e=H(t,n,i);if(!e)return"";for(let t=0,r=3;t<r;t+=1){const t=H(e,n,i);if(!t)break;e=t}return e}function H(t,n,i){if(i.has(t))return i.get(t);if("string"==typeof n[t]){const e=n[t];return e&&i.has(e)?i.get(e):e}return""}function A(t,n){return!!n.has(t)}function s(t,n){for(const[i,e]of Object.entries(t)){if(!i||!e)throw new Error(`validateWinData() k or v empty: "${i}"/"${e}"`);if("string"!=typeof e)throw new Error(`validateWinData() v not typeof string: "${i}"/"N/A"`);if(!A(e,n))throw new Error(`validateWinData() value is invalid ffi param value: "${i}"/"${e}", may extra space`)}}const _="uint16",W="uint32",c=t,S=t,p="PVOID",C=t,l=t,f="void",U="uint16",d="int16",w="int",G="bool",h="byte",g="pointer",b="uint8",m="uint8",M="DWORD",y="uint64",v="ULONG_PTR",B="uint32",F="uint64",V="float",Y="HANDLE",k=t,x="HANDLE",z="HANDLE",j="HANDLE",K="HANDLE",$="HANDLE",X="HANDLE",Z="HANDLE",q="HANDLE",J="HANDLE",Q="HANDLE",tt="HANDLE",nt="HANDLE",it="HANDLE",et="HANDLE",rt="HANDLE",Nt="HANDLE",Ot="HANDLE",Dt="HANDLE",ot="HANDLE",Tt="HANDLE",Lt="HANDLE",Rt="HANDLE",Pt="HANDLE",Et="HANDLE",ut="HANDLE",It="HANDLE",at="HANDLE",Ht="HANDLE",At="long",st="HANDLE",_t="HANDLE",Wt="HANDLE",ct="HANDLE",St="HANDLE",pt="HANDLE",Ct="int",lt=t,ft="int8",Ut="int16",dt="int32",wt="int64",Gt="WORD",ht="DWORD",gt="DWORD",bt="DWORD",mt="long",Mt="longlong",yt="int32",vt="int64",Bt="LONG_PTR",Ft="BOOL",Vt="byte*",Yt="DWORD",kt="uint8*",xt="uint16*",zt=n,jt="void*",Kt="LPVOID",$t="uint16*",Xt=t,Zt="int*",qt="int32*",Jt="pointer",Qt="pointer",tn="char*",nn="uint16*",en=n,rn="uint16*",Nn="LONG_PTR",On="uint32",Dn="int*",on="bool*",Tn="byte*",Ln="char*",Rn="uint8*",Pn=t,En="uint16*",un="uint32*",In="uint64*",an="DWORD_PTR",Hn="uint32*",An="uint64*",sn="float*",_n="pointer",Wn=t,cn=t,Sn="int*",pn="int**",Cn="int8*",ln="int16*",fn="int32*",Un="int64*",dn="uint32*",wn="long*",Gn="int64*",hn="pointer",gn="int32*",bn="int64*",mn=t,Mn=t,yn="pointer",vn="pointer",Bn="int16*",Fn="ULONG_PTR",Vn="pointer",Yn="char*",kn=n,xn=n,zn=n,jn="pointer",Kn="pointer",$n="uint*",Xn="uint**",Zn="uint8*",qn="uint16*",Jn="uint32*",Qn="uint64*",ti="uint*",ni="uint64*",ii="uint64**",ei="uint*",ri="uint64*",Ni="uint16*",Oi="uint16*",Di="uint16*",oi="uint16*",Ti="uint64",Li="HANDLE",Ri="LPVOID",Pi="HANDLE",Ei="int16",ui="ULONG_PTR",Ii="LONG_PTR",ai=n,Hi=n,Ai="uchar",si=t,_i="uint",Wi=t,ci="uint8",Si="uint16",pi="uint32",Ci="uint64",li="uint",fi="uint64",Ui="uint32",di="uint64",wi="pointer",Gi="ushort",hi=Mt,gi="pointer",bi="pointer",mi="pointer",Mi="UINT_PTR",yi="pointer",vi="pointer",Bi="pointer",Fi="pointer",Vi="pointer",Yi="char*",ki="pointer",xi="pointer",zi="pointer",ji="pointer",Ki="pointer",$i="pointer",Xi="pointer";var Zi=Object.freeze({__proto__:null,ATOM:_,DWORD:W,PVOID:c,HANDLE:S,HANDLE_PVOID:"PVOID",LONG_PTR:C,ULONG_PTR:l,VOID:f,WCHAR:U,WORD:d,BOOL:w,BOOLEAN:"bool",BYTE:h,CALLBACK:g,CCHAR:b,CHAR:m,COLORREF:"DWORD",DWORDLONG:"uint64",DWORD_PTR:v,DWORD32:B,DWORD64:F,FLOAT:V,HACCEL:Y,HALF_PTR:k,HBITMAP:x,HBRUSH:z,HCOLORSPACE:"HANDLE",HCONV:K,HCONVLIST:"HANDLE",HCURSOR:X,HDC:Z,HDDEDATA:"HANDLE",HDESK:J,HDROP:Q,HDWP:tt,HENHMETAFILE:"HANDLE",HFILE:it,HFONT:et,HGDIOBJ:rt,HGLOBAL:Nt,HHOOK:Ot,HICON:Dt,HINSTANCE:"HANDLE",HKEY:Tt,HKL:Lt,HLOCAL:Rt,HMENU:Pt,HMETAFILE:"HANDLE",HMODULE:ut,HMONITOR:"HANDLE",HPALETTE:"HANDLE",HPEN:Ht,HRESULT:"long",HRGN:st,HRSRC:_t,HSZ:Wt,HWINEVENTHOOK:"HANDLE",HWINSTA:St,HWND:pt,INT:Ct,INT_PTR:lt,INT8:ft,INT16:Ut,INT32:dt,INT64:wt,LANGID:"WORD",LCID:ht,LCTYPE:gt,LGRPID:bt,LONG:mt,LONGLONG:Mt,LONG32:yt,LONG64:vt,LPARAM:Bt,LPBOOL:"BOOL",LPBYTE:Vt,LPCOLORREF:"DWORD",LPCSTR:kt,LPCWSTR:xt,LPCTSTR:zt,LPVOID:jt,LPCVOID:Kt,LPDWORD:$t,LPHANDLE:Xt,LPINT:Zt,LPLONG:qt,LPMSG:Jt,LPPOINT:Qt,LPSTR:tn,LPWSTR:nn,LPTSTR:en,LPWORD:rn,LRESULT:Nn,NTSTATUS:"uint32",PBOOL:Dn,PBOOLEAN:"bool*",PBYTE:Tn,PCHAR:Ln,PCSTR:Rn,PCTSTR:Pn,PCWSTR:En,PDWORD:un,PDWORDLONG:"uint64*",PDWORD_PTR:an,PDWORD32:Hn,PDWORD64:An,PFLOAT:sn,PHALF_PTR:"pointer",PHANDLE:Wn,PHKEY:cn,PINT:Sn,PINT_PTR:"int**",PINT8:Cn,PINT16:ln,PINT32:fn,PINT64:Un,PLCID:dn,PLONG:wn,PLONGLONG:"int64*",PLONG_PTR:"pointer",PLONG32:gn,PLONG64:bn,POINTER_32:mn,POINTER_64:Mn,POINTER_SIGNED:"pointer",POINTER_UNSIGNED:"pointer",PSHORT:Bn,PSIZE_T:Fn,PSSIZE_T:Vn,PSTR:Yn,PTBYTE:kn,PTCHAR:xn,PTSTR:zn,PUCHAR:jn,PUHALF_PTR:"pointer",PUINT:$n,PUINT_PTR:"uint**",PUINT8:Zn,PUINT16:qn,PUINT32:Jn,PUINT64:Qn,PULONG:ti,PULONGLONG:"uint64*",PULONG_PTR:"uint64**",PULONG32:"uint*",PULONG64:ri,PUSHORT:Ni,PWCHAR:Oi,PWORD:Di,PWSTR:oi,QWORD:Ti,SC_HANDLE:"HANDLE",SC_LOCK:Ri,SERVICE_STATUS_HANDLE:"HANDLE",SHORT:Ei,SIZE_T:ui,SSIZE_T:Ii,TBYTE:ai,TCHAR:Hi,UCHAR:Ai,UHALF_PTR:si,UINT:_i,UINT_PTR:Wi,UINT8:ci,UINT16:Si,UINT32:pi,UINT64:Ci,ULONG:li,ULONGLONG:"uint64",ULONG32:Ui,ULONG64:di,UNICODE_STRING:"pointer",USHORT:Gi,USN:hi,WINEVENTPROC:"pointer",WNDENUMPROC:"pointer",WNDPROC:mi,WPARAM:Mi,LPINITCOMMONCONTROLSEX:"pointer",LPWNDCLASSEX:"pointer",PWINDOWINFO:"pointer",PFILETIME:"pointer",LPFILETIME:"pointer",va_list:"char*",INITCOMMONCONTROLSEX:"pointer",MSG:xi,POINT:zi,WNDCLASSEX:"pointer",WINDOWINFO:"pointer",PRAWINPUTDEVICELIST:"pointer",RECT:Xi});const qi=new Map([["HANDLE",[t,"uint64","uint32"]],["PVOID",[t,"uint64*","uint32*"]],["HALF_PTR",[t,"int32","int16"]],["INT_PTR",[t,"int64","int32"]],["LONG_PTR",[t,"int64","int32"]],["LPCTSTR",[n,xt,kt]],["LPHANDLE",[t,"uint64*","uint32*"]],["LPTSTR",[n,nn,"uint8*"]],["PCTSTR",[t,xt,kt]],["PHANDLE",[t,"uint64**","uint32**"]],["PHKEY",[t,"uint64*","uint32*"]],["POINTER_32",[t,"uint32*","uint32*"]],["POINTER_64",[t,"uint64*","uint32*"]],["PTBYTE",[n,"int16*","int8*"]],["PTCHAR",[n,"uint16*","uint8*"]],["PTSTR",[n,nn,tn]],["TBYTE",[n,"int16","int8"]],["TCHAR",[n,U,"uint8"]],["UHALF_PTR",[t,"uint32","uint16"]],["UINT_PTR",[t,"uint64","uint32"]],["ULONG_PTR",[t,"uint64","uint32"]]]),Ji=o(Zi,qi),Qi={cbSize:Ji.DWORD,cItems:Ji.INT,cColumns:Ji.INT,cRows:Ji.INT,iColFocus:Ji.INT,iRowFocus:Ji.INT,cxItem:Ji.INT,cyItem:Ji.INT,ptStart:Ji.POINT},te={dwData:Ji.ULONG_PTR,cbData:Ji.DWORD,lpData:Ji.PVOID},ne={uMsg:Ji.DWORD,wParamL:Ji.WORD,wParamH:Ji.WORD},ie={dwSize:Ji.DWORD,dwICC:Ji.DWORD},ee={wVk:Ji.WORD,wScan:Ji.WORD,dwFlags:Ji.DWORD,time:Ji.DWORD,dwExtraInfo:Ji.ULONG_PTR},re={dx:Ji.LONG,dy:Ji.LONG,mouseData:Ji.DWORD,dwFlags:Ji.DWORD,time:Ji.DWORD,dwExtraInfo:Ji.ULONG_PTR},Ne={hwnd:Ji.HWND,message:Ji.UINT,wParam:Ji.WPARAM,lParam:Ji.LPARAM,time:Ji.DWORD,pt:Ji.POINT,lPrivate:Ji.DWORD},Oe={x:Ji.LONG,y:Ji.LONG},De={Reserved1:Ji.PVOID,PebBaseAddress:Ji.PVOID,Reserved2:Ji.PVOID,UniqueProcessId:Ji.ULONG_PTR,InheritedFromUniqueProcessId:Ji.PVOID},oe={Length:Ji.USHORT,MaximumLength:Ji.USHORT,Buffer:Ji.PWSTR},Te={dwSizeHid:Ji.DWORD,dwCount:Ji.DWORD,bRawData:Ji.BYTE},Le={hDevice:Ji.HANDLE,dwType:Ji.DWORD},Re={dwType:Ji.DWORD,dwSize:Ji.DWORD,hDevice:Ji.HANDLE,wParam:Ji.WPARAM},Pe={MakeCode:Ji.USHORT,Flags:Ji.USHORT,Reserved:Ji.USHORT,VKey:Ji.USHORT,Message:Ji.UINT,ExtraInformation:Ji.ULONG},Ee={cbSize:Ji.DWORD,rcWindow:Ji.RECT,rcClient:Ji.RECT,dwStyle:Ji.DWORD,dwExStyle:Ji.DWORD,dwWindowStatus:Ji.DWORD,cxWindowBorders:Ji.UINT,cyWindowBorders:Ji.UINT,atomWindowType:Ji.ATOM,wCreatorVersion:Ji.WORD},ue={cbSize:Ji.UINT,style:Ji.UINT,lpfnWndProc:Ji.WNDPROC,cbClsExtra:Ji.INT,cbWndExtra:Ji.INT,hInstance:Ji.HINSTANCE,hIcon:Ji.HICON,hCursor:Ji.HCURSOR,hbrBackground:Ji.HBRUSH,lpszMenuName:Ji.LPCTSTR,lpszClassName:Ji.LPCTSTR,hIconSm:Ji.HICON},Ie={left:Ji.LONG,top:Ji.LONG,right:Ji.LONG,bottom:Ji.LONG},ae={dwLowDateTime:Ji.DWORD,dwHighDateTime:Ji.DWORD};var He=Object.freeze({__proto__:null,ALTTABINFO:Qi,COPYDATASTRUCT:te,HARDWAREINPUT:ne,INITCOMMONCONTROLSEX:ie,KEYBDINPUT:ee,MOUSEINPUT:re,MSG:Ne,POINT:Oe,PROCESS_BASIC_INFORMATION:De,UNICODE_STRING:oe,RAWHID:Te,RAWINPUTDEVICELIST:Le,RAWINPUTHEADER:Re,RAWKEYBOARD:Pe,WINDOWINFO:Ee,WNDCLASSEX:ue,RECT:Ie,_RECT:Ie,FILETIME:ae});const Ae=o(Zi,qi),se={mouse:Ae.INT,keyboard:Ae.INT,hid:Ae.INT};var _e=Object.freeze({__proto__:null,RID_DEVICE_INFO_DUMMYUNIONNAME:se}),We=Object.freeze({__proto__:null}),ce=Object.freeze({__proto__:null});
/**
 * node-win32-def
 *
 * @author waiting
 * @license MIT
 * @link https://github.com/waitingsong/node-win32-def
 */
const Se=o(Zi,qi);export{D as Config,ce as DModel,He as DStruct,Se as DTypes,_e as DUnion,We as FModel};
//# sourceMappingURL=index.esm.min.js.map
